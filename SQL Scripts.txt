USE [ContactDB]
GO
/****** Object:  Table [dbo].[UserContact]    Script Date: 08-08-2024 23:56:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserContact](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[FirstName] [nvarchar](100) NOT NULL,
	[LastName] [nvarchar](100) NOT NULL,
	[Email] [nvarchar](100) NOT NULL,
	[PhoneNumber] [int] NOT NULL,
	[Address] [nvarchar](100) NOT NULL,
	[City] [nvarchar](100) NOT NULL,
	[State] [nvarchar](100) NOT NULL,
	[Country] [nvarchar](100) NOT NULL,
	[PostalCode] [nvarchar](100) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[USP_Contact_DELETE]    Script Date: 08-08-2024 23:56:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


-- =============================================

-- Author:		NIKHIL A.

-- Create date: AUG-03-2024

-- Description:	SP Creattion for 'INSERT/UPDATE' >> By using Table [UserContact]

-- =============================================


CREATE PROCEDURE [dbo].[USP_Contact_DELETE]


@Email varchar(100),
@PhoneNumber int



AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @Success INT = 1, @Failure INT = 0;

    BEGIN TRY
        IF EXISTS (SELECT 1 FROM [UserContact]  WHERE [Email] = @Email and  [PhoneNumber] = @PhoneNumber)
        BEGIN
            DELETE FROM [UserContact]  WHERE [Email] = @Email and  [PhoneNumber] = @PhoneNumber;


            RETURN @Success;
        END
        ELSE
        BEGIN
            RETURN @Failure;
        END
    END TRY
    BEGIN CATCH
        RETURN @Failure;
    END CATCH
END




GO
/****** Object:  StoredProcedure [dbo].[USP_ContactGET]    Script Date: 08-08-2024 23:56:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================

-- Author:		NIKHIL A.

-- Create date: AUG-03-2024

-- Description:	SP Creattion for 'GET' >> By using Table [UserContact]

-- =============================================

CREATE PROCEDURE [dbo].[USP_ContactGET]

AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @Success INT = 1, @Failure INT = 0, @Not_Exists INT = -1	
	BEGIN TRY

		SELECT [FirstName],
			[LastName],
			[Email],
			[PhoneNumber],
			[Address],
			[City] ,
			[State] ,
			[Country],
			[PostalCode]

		FROM [UserContact]


		RETURN @Success
	END TRY
	BEGIN CATCH
	select ERROR_MESSAGE()
			RETURN @Failure 
	END CATCH
END
GO
/****** Object:  StoredProcedure [dbo].[USP_ContactInsertUpdate]    Script Date: 08-08-2024 23:56:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================

-- Author:		NIKHIL A.

-- Create date: AUG-03-2024

-- Description:	SP Creattion for 'INSERT/UPDATE' >> By using Table [UserContact]

-- =============================================



CREATE PROCEDURE [dbo].[USP_ContactInsertUpdate]

@FirstName varchar(50),
@LastName varchar(50),
@Email		varchar(100),
@PhoneNumber int,
@Address  varchar(200),
@City varchar(100),
@State varchar(100),
@Country varchar(100),
@PostalCode int




AS    
BEGIN    
  
  SET NOCOUNT ON;    
  DECLARE @Success int = 1;    
  DECLARE @Failure int = 0;    


  -----------------------------
  BEGIN TRY


  IF EXISTS(SELECT 1 FROM [UserContact] WITH(NOLOCK) WHERE  [Email] = @Email and [PhoneNumber] = @PhoneNumber)
  BEGIN

  UPDATE [dbo].[USP_ContactInsertUpdate] 
  SET 
			
			[FirstName] = @FirstName,
			[LastName]= @LastName,
			[Email] = @Email,
		--	[@PhoneNumber] = @PhoneNumber,
			--[@Address] = @Address,
			[City] = @City,
			[State] = @State,
			[Country] = @Country,
			[PostalCode] = @PostalCode
			
		WHERE [Email] = @Email and [PhoneNumber] = @PhoneNumber	

  END
  ELSE
  BEGIN
  INSERT INTO [dbo].[USP_ContactInsertUpdate] (
			[FirstName],
			[LastName],
			[Email],
			[PhoneNumber],
			[Address],
			[City] ,
			[State] ,
			[Country],
			[PostalCode]
			)
			 VALUES(@FirstName,@LastName,@Email,@PhoneNumber,@Address,@City,@State,@Country,@PostalCode
			)

			END
Return @Success 
        END TRY
		BEGIN catch
Return @Failure; 
		END catch 
		    END
GO
